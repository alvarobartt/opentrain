{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"opentrain \ud83d\ude82 Fine-tune OpenAI models for text classification, question answering, and more opentrain is a simple Python package to fine-tune OpenAI models for task-specific purposes such as text classification, token classification, or question answering. More information about OpenAI Fine-tuning at https://platform.openai.com/docs/guides/fine-tuning.","title":"Home"},{"location":"license/","text":"\ud83d\udcc4 License MIT License Copyright (c) 2023-present Alvaro Bartolome alvarobartt@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright (c) 2023-present Alvaro Bartolome alvarobartt@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"\ud83d\udcc4 License"},{"location":"todos/","text":"\ud83d\udd2e v0.2.0 - TODOs [ ] Add Typer CLI e.g. opentrain train ... [ ] Add Dataset validation before actually uploading a Dataset / File to OpenAI. [ ] Add Dataset.from_datasets , Dataset.to_datasets , and Dataset.to_records . [ ] Add fsspec support for Dataset.from_file , and Dataset.to_file . [ ] Allow different input paths such as pathlib.Path or os.path in Dataset.from_file . [ ] Explore https://github.com/openai/openai-python/blob/c556584eff3b36c92278e6af62cfe02ebb68fb65/openai/api_resources/file.py#L218 to avoid uploading duplicated files to OpenAI. [ ] Add Trainer.for_text_classification , Trainer.for_question_answering , Trainer.for_text_summarization , and more if applicable. [ ] Add wandb as an optional dependency for tracking fine-tune runs. [ ] Explore automatically uploaded files to OpenAI after fine-tuning with purpose='fine-tune-results' . [ ] Differentiate between both file-purposes fine-tune and fine-tune-results .","title":"TODOs"},{"location":"todos/#v020-todos","text":"[ ] Add Typer CLI e.g. opentrain train ... [ ] Add Dataset validation before actually uploading a Dataset / File to OpenAI. [ ] Add Dataset.from_datasets , Dataset.to_datasets , and Dataset.to_records . [ ] Add fsspec support for Dataset.from_file , and Dataset.to_file . [ ] Allow different input paths such as pathlib.Path or os.path in Dataset.from_file . [ ] Explore https://github.com/openai/openai-python/blob/c556584eff3b36c92278e6af62cfe02ebb68fb65/openai/api_resources/file.py#L218 to avoid uploading duplicated files to OpenAI. [ ] Add Trainer.for_text_classification , Trainer.for_question_answering , Trainer.for_text_summarization , and more if applicable. [ ] Add wandb as an optional dependency for tracking fine-tune runs. [ ] Explore automatically uploaded files to OpenAI after fine-tuning with purpose='fine-tune-results' . [ ] Differentiate between both file-purposes fine-tune and fine-tune-results .","title":"\ud83d\udd2e v0.2.0 - TODOs"},{"location":"usage/","text":"\ud83d\udcbb Usage \ud83d\udce6 Data management import openai from opentrain import Dataset openai . api_key = \"<ADD_OPENAI_API_KEY_HERE>\" dataset = Dataset . from_file ( \"data.jsonl\" ) dataset . info dataset . download ( output_path = \"downloaded-data.jsonl\" ) \ud83e\uddbe Fine-tune import openai from opentrain import Train openai . api_key = \"<ADD_OPENAI_API_KEY_HERE>\" trainer = Train ( model = \"ada\" ) trainer . train ( [ { \"prompt\" : \"I love to play soccer ->\" , \"completion\" : \" soccer\" , }, { \"prompt\" : \"I love to play basketball ->\" , \"completion\" : \" basketball\" , }, ], ) \ud83e\udd16 Predict import openai from opentrain import Inference openai . api_key = \"<ADD_OPENAI_API_KEY_HERE>\" predict = Inference ( model = \"ada:ft-personal-2021-03-01-00-00-01\" ) predict . predict ( \"I love to play ->\" )","title":"Usage"},{"location":"usage/#usage","text":"","title":"\ud83d\udcbb Usage"},{"location":"usage/#data-management","text":"import openai from opentrain import Dataset openai . api_key = \"<ADD_OPENAI_API_KEY_HERE>\" dataset = Dataset . from_file ( \"data.jsonl\" ) dataset . info dataset . download ( output_path = \"downloaded-data.jsonl\" )","title":"\ud83d\udce6 Data management"},{"location":"usage/#fine-tune","text":"import openai from opentrain import Train openai . api_key = \"<ADD_OPENAI_API_KEY_HERE>\" trainer = Train ( model = \"ada\" ) trainer . train ( [ { \"prompt\" : \"I love to play soccer ->\" , \"completion\" : \" soccer\" , }, { \"prompt\" : \"I love to play basketball ->\" , \"completion\" : \" basketball\" , }, ], )","title":"\ud83e\uddbe Fine-tune"},{"location":"usage/#predict","text":"import openai from opentrain import Inference openai . api_key = \"<ADD_OPENAI_API_KEY_HERE>\" predict = Inference ( model = \"ada:ft-personal-2021-03-01-00-00-01\" ) predict . predict ( \"I love to play ->\" )","title":"\ud83e\udd16 Predict"},{"location":"warning/","text":"\u26a0\ufe0f Warning Fine-tuning OpenAI models via their API may take too long, so please be patient. Also, bear in mind that in some cases you just won't need to fine-tune an OpenAI model for your task. To keep track of all the models you fine-tuned, you should visit https://platform.openai.com/account/usage, and then in the \"Daily usage breakdown (UTC)\" you'll need to select the date where you triggered the fine-tuning and click on \"Fine-tune training\" to see all the fine-tune training requests that you sent. Besides that, in the OpenAI Playground at https://platform.openai.com/playground, you'll see a dropdown menu for all the available models, both the default ones and the ones you fine-tuned. Usually, in the following format <MODEL>:ft-personal-<DATE> , e.g. ada:ft-personal-2021-03-01-00-00-01 .","title":"Warning"},{"location":"warning/#warning","text":"Fine-tuning OpenAI models via their API may take too long, so please be patient. Also, bear in mind that in some cases you just won't need to fine-tune an OpenAI model for your task. To keep track of all the models you fine-tuned, you should visit https://platform.openai.com/account/usage, and then in the \"Daily usage breakdown (UTC)\" you'll need to select the date where you triggered the fine-tuning and click on \"Fine-tune training\" to see all the fine-tune training requests that you sent. Besides that, in the OpenAI Playground at https://platform.openai.com/playground, you'll see a dropdown menu for all the available models, both the default ones and the ones you fine-tuned. Usually, in the following format <MODEL>:ft-personal-<DATE> , e.g. ada:ft-personal-2021-03-01-00-00-01 .","title":"\u26a0\ufe0f Warning"}]}